programa {

  inteiro coluna
  inteiro linha
  cadeia nome
  cadeia matriz[2][2] = {{" "," "},{" "," "}}
  logico sair = verdadeiro
  cadeia valorSair

  funcao loopTxt(){
    enquanto(sair){
      escreva("digite a linha: ")
        leia(linha)
      escreva("digite a coluna: ")
        leia(coluna)
      escreva("digite o nome: ")
        leia(nome)
        matriz[linha][coluna] = nome
        
      escreva("deseja continuar ? (s/n): ")
        leia(valorSair)
      se(valorSair == "n"){
        sair = falso
      }
    }
  }

  funcao paraRodar(){
    loopTxt()
    para(inteiro i=0;i<2;i++){
      escreva("\n")
      para(inteiro j=0;j<2;j++){
        se(matriz[i][j] == " "){
          matriz[i][j] = "x"
        }
        escreva(matriz[i][j])
        escreva("\t\t")
        
        
      }
    }
    
  }

                                    JOGO DA VELHA



programa {
  cadeia matrix[3][3]={{" "," "," "},{" "," "," "},{" "," "," "}}
  inteiro l=0
  inteiro c=0
  cadeia valor="x"
  logico sair = verdadeiro
  

  funcao pegarValores(){
    enquanto(sair){

      escreva("\n\ndigite a linha que deseja acessar: ")
        leia(l)
   
      escreva("digite a coluna que deseja acessar: ")
        leia(c)
     
      escreva("digite o valor  que deseja: ")
        leia(valor)
        matrix[l][c]=valor
      
      loop()
      verificarXGanhador()
      verificarOGanhador()
      
    }
  }

  funcao loop(){
    para(inteiro i =0;i<3;i++){
      escreva("\n")
      para(inteiro j=0;j<3;j++){
        escreva("\t")
        escreva( matrix[i][j])
      
      }
    }
  }
  funcao verificarXGanhador(){
    // verificar linhas ganhadoras
    para(inteiro i=0;i<3;i++){
      se(((matrix[i][0] == matrix[i][1]) e(matrix [i][1]== matrix[i][2])e (matrix[i][2]!=" ")e (matrix[i][2]== "x")){
        escreva("\n X ganhou")
        sair=falso
      
      }
    

    // verificar colunas ganhadoras

      senao se((matrix[0][i] == matrix[1][i]) e(matrix [1][i]== matrix[2][i])e (matrix[2][i]!=" ")e (matrix[2][i]== "x")){
        escreva("\n X ganhou")
        sair=falso
        
      }
    }

    // verificar X ganhadores
    senao se((matrix[0][0] == matrix[1][1]) e(matrix [1][1]== matrix[2][2])e (matrix[2][2] !=" ")e (matrix[2][2]== "x")){
      escreva("\n X ganhou")
      sair=falso
      
    }
    senao se((matrix[2][0] == matrix[1][1]) e(matrix [1][1] == matrix[0][2]) e (matrix[0][2] != " ")e (matrix[0][2]== "x")){
      escreva("\n X ganhou")
      sair=falso
      
    }
  
   

  }
  funcao verificarOGanhador(){
   para(inteiro i=0;i<3;i++){
      se(((matrix[i][0] == matrix[i][1]) e(matrix [i][1]== matrix[i][2])e (matrix[i][2]!=" ")e (matrix[i][2]== "o")){
        escreva("\n O ganhou")
        sair=falso
      
      }
    

    // verificar colunas ganhadoras

      senao se((matrix[0][i] == matrix[1][i]) e(matrix [1][i]== matrix[2][i])e (matrix[2][i]!=" ")e (matrix[2][i]== "o")){
        escreva("\n O ganhou")
        sair=falso
        
      }
    }

    // verificar X ganhadores
    senao se((matrix[0][0] == matrix[1][1]) e(matrix [1][1]== matrix[2][2])e (matrix[2][2] !=" ")e (matrix[2][2]== "o")){
      escreva("\n O ganhou")
      sair=falso
      
    }
    senao se((matrix[2][0] == matrix[1][1]) e(matrix [1][1] == matrix[0][2]) e (matrix[0][2] != " ")e (matrix[0][2]== "o")){
      escreva("\n O ganhou")
      sair=falso
     
    }
    
   
  }
  

  funcao inicio() {
   pegarValores()

  }
}
